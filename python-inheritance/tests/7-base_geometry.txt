>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()
>>> bg.integer_validator("my_int", 12)
>>> try:
...     bg.integer_validator("name", "John")
... except Exception as e:
...      print("[{}] {}".format(e.__class__.__name__, e))
...      
[TypeError] name must be an integer
>>> try:
...     bg.integer_validator("age", 0)
... except Exception as e:
...     print("[{}] {}".format(e.__class__.__name__, e))
...     
[ValueError] age must be greater than 0
>>> try:
...     bg.integer_validator("distance", -4)
... except Exception as e:
...     print("[{}] {}".format(e.__class__.__name__, e))
...     
[ValueError] distance must be greater than 0
>>> bg.integer_validator("my_int", 12.5)
Traceback (most recent call last):
  File "<python-input-6>", line 1, in <module>
    bg.integer_validator("my_int", 12.5)
    ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/Users/altyt/Akatsuki667/holbertonschool-higher_level_programming/python-inheritance/7-base_geometry.py", line 48, in integer_validator
    raise TypeError(f"{name} must be an integer")
TypeError: my_int must be an integer
